{"openapi":"3.1.0","info":{"title":"Communication LTD - Vulnerable API","description":"This is the vulnerable version of the backend for demonstration purposes.","version":"1.0.0"},"paths":{"/users/register":{"post":{"summary":"Register","description":"Vulnerable registration endpoint.\nAllows SQL Injection and XSS by not validating or sanitizing user input.","operationId":"register_users_register_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegistrationRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/login":{"post":{"summary":"Login","description":"Vulnerable login endpoint.\nCombines password validation with SQL Injection vulnerability.","operationId":"login_users_login_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/logout":{"post":{"summary":"Logout","description":"Handle user logout by invalidating the current token.\nVulnerable implementation allowing SQL Injection by not sanitizing user input.","operationId":"logout_users_logout_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogoutRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/user-details":{"get":{"summary":"Get User Details","description":"Fetch user details using an authentication token.\nVulnerable implementation allowing SQL Injection by not sanitizing user input.\n\n:param token: The authentication token of the user.\n:return: User details including ID, full name, email, phone number, and login status.","operationId":"get_user_details_users_user_details_get","parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","title":"Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/ask-for-password-reset":{"post":{"summary":"Request Password Reset","description":"Initiate a password reset for a user by sending a reset token to their email.\n\n:param request: PasswordResetRequest containing the user's email.\n:return: A success message with the reset token.","operationId":"request_password_reset_users_ask_for_password_reset_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordResetRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/confirm-reset-password":{"post":{"summary":"Confirm Reset Password","description":"Confirm password reset with a new password.\n\n:param request: ResetPasswordRequest containing the reset token and new password details.\n:return: A success message upon successful password reset.","operationId":"confirm_reset_password_users_confirm_reset_password_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetPasswordRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/change-password-authenticated":{"post":{"summary":"Change Password Authenticated","description":"Allow authenticated users to change their password by providing the username and current password.\n\n:param request: ChangePasswordAuthenticatedRequest containing username, current password, and new password details.\n:return: A success message upon successful password change.","operationId":"change_password_authenticated_users_change_password_authenticated_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangePasswordAuthenticatedRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/customers/":{"post":{"summary":"Create Customer","description":"Add a new customer to the database. Vulnerable to XSS and SQL Injection attacks.\nCreates a new customer with default values, then updates the fields based on user input.\n:param customer: CustomerCreate containing details about the new customer.\n:return: A success message with the customer's details.","operationId":"create_customer_customers__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/customers/search":{"post":{"summary":"Search Customers","description":"Vulnerable endpoint to search customers by a query string.\nAllows SQL Injection with flexibility for information retrieval.\nThis endpoint allows searching by multiple fields like name, phone, email, etc.","operationId":"search_customers_customers_search_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchQuery"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/packages/":{"get":{"summary":"Get Packages","description":"Fetch all available packages from the database. Vulnerable to SQL Injection.\n\nThis endpoint does not properly sanitize user input, allowing an attacker to inject \nmalicious SQL commands into the query.\n\n:return: List of all packages.","operationId":"get_packages_packages__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PackageResponse"},"type":"array","title":"Response Get Packages Packages  Get"}}}}}}},"/contact-us-send":{"post":{"summary":"Contact Us","description":"Vulnerable endpoint for \"Contact Us\" form submissions.\nThis endpoint is susceptible to both XSS and SQL Injection vulnerabilities as it does not validate or sanitize user input.\n\n:param request: The ContactUsRequest model containing the user's message and details.\n:return: A success message if the email is sent successfully.","operationId":"contact_us_contact_us_send_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactUsRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/":{"get":{"summary":"Landing Page","description":"Render the landing page with custom theme (Wine Red and Yellow/Orange buttons).\nThis is the main page users will land on when they visit the site.","operationId":"landing_page__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/health":{"get":{"summary":"Health Check","description":"Health check endpoint to verify the application is running.\nReturns an HTML response with a success message.","operationId":"health_check_health_get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/test-email":{"get":{"summary":"Test Email Page","description":"Render a page to test email sending functionality with a wine red theme.\nProvides a form for users to send a test email.","operationId":"test_email_page_test_email_get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/send-test-email":{"post":{"summary":"Send Test Email","description":"Handle test email sending without sanitization.\nThis endpoint allows sending a test email to the given email address.","operationId":"send_test_email_send_test_email_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_send_test_email_send_test_email_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/audit-logs-view":{"get":{"summary":"Audit Logs View","description":"Render a page to view and filter Audit Logs with custom styling and a delete button.\nThis endpoint provides a view to check the actions logged in the system.","operationId":"audit_logs_view_audit_logs_view_get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/audit-logs":{"get":{"summary":"Get Audit Logs","description":"Fetch Audit Logs, optionally filtered by User ID.\nThis implementation is intentionally vulnerable to SQL Injection.\n:param user_id: Optional User ID to filter logs.\n:return: List of audit logs.","operationId":"get_audit_logs_audit_logs_get","parameters":[{"name":"user_id","in":"query","required":false,"schema":{"type":"string","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}},"delete":{"summary":"Delete Audit Logs","description":"Delete all audit logs from the database.","operationId":"delete_audit_logs_audit_logs_delete","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}}},"components":{"schemas":{"Body_send_test_email_send_test_email_post":{"properties":{"email":{"type":"string","title":"Email"}},"type":"object","required":["email"],"title":"Body_send_test_email_send_test_email_post"},"ChangePasswordAuthenticatedRequest":{"properties":{"username":{"type":"string","title":"Username"},"current_password":{"type":"string","title":"Current Password"},"new_password":{"type":"string","title":"New Password"},"confirm_password":{"type":"string","title":"Confirm Password"}},"type":"object","required":["username","current_password","new_password","confirm_password"],"title":"ChangePasswordAuthenticatedRequest"},"ContactUsRequest":{"properties":{"user_id":{"type":"string","title":"User Id"},"name":{"type":"string","title":"Name"},"email":{"type":"string","title":"Email"},"message":{"type":"string","title":"Message"},"send_copy":{"type":"boolean","title":"Send Copy","default":false}},"type":"object","required":["user_id","name","email","message"],"title":"ContactUsRequest"},"CustomerCreate":{"properties":{"user_id":{"type":"string","title":"User Id"},"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"phone_number":{"type":"string","title":"Phone Number"},"email_address":{"type":"string","title":"Email Address"},"address":{"type":"string","title":"Address"},"package_id":{"type":"string","title":"Package Id"},"gender":{"type":"string","title":"Gender"}},"type":"object","required":["user_id","first_name","last_name","phone_number","email_address","address","package_id","gender"],"title":"CustomerCreate"},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LoginRequest":{"properties":{"username_or_email":{"type":"string","title":"Username Or Email"},"password":{"type":"string","title":"Password"}},"type":"object","required":["username_or_email","password"],"title":"LoginRequest"},"LogoutRequest":{"properties":{"token":{"type":"string","title":"Token"}},"type":"object","required":["token"],"title":"LogoutRequest"},"PackageResponse":{"properties":{"id":{"type":"string","title":"Id"},"package_name":{"type":"string","title":"Package Name"},"description":{"type":"string","title":"Description"},"monthly_price":{"type":"integer","title":"Monthly Price"}},"type":"object","required":["id","package_name","description","monthly_price"],"title":"PackageResponse"},"PasswordResetRequest":{"properties":{"email":{"type":"string","title":"Email"}},"type":"object","required":["email"],"title":"PasswordResetRequest"},"RegistrationRequest":{"properties":{"full_name":{"type":"string","title":"Full Name"},"username":{"type":"string","title":"Username"},"email":{"type":"string","title":"Email"},"phone_number":{"type":"string","title":"Phone Number"},"password":{"type":"string","title":"Password"},"confirm_password":{"type":"string","title":"Confirm Password"},"gender":{"type":"string","title":"Gender"}},"type":"object","required":["full_name","username","email","phone_number","password","confirm_password","gender"],"title":"RegistrationRequest"},"ResetPasswordRequest":{"properties":{"reset_token":{"type":"string","title":"Reset Token"},"new_password":{"type":"string","title":"New Password"},"confirm_password":{"type":"string","title":"Confirm Password"}},"type":"object","required":["reset_token","new_password","confirm_password"],"title":"ResetPasswordRequest","description":"Model for changing password (after token)."},"SearchQuery":{"properties":{"query":{"type":"string","title":"Query"}},"type":"object","required":["query"],"title":"SearchQuery"},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}