{"openapi":"3.1.0","info":{"title":"Protected Backend - Communication LTD API","description":"This API serves as the protected backend for managing Communication LTD operations, with added security measures including SQL injection and XSS protection.","version":"1.0.0"},"paths":{"/users/login":{"post":{"tags":["Users"],"summary":"Login","description":"Handle user login.\n\n:param request: LoginRequest containing username or email and password.\n:param db: Database session.\n:return: Token and user ID on successful login.","operationId":"login_users_login_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/logout":{"post":{"tags":["Users"],"summary":"Logout","description":"Handle user logout by invalidating the current token.\nLogs the user out by marking them as not logged in and nullifying their current token.\n\n:param request: LogoutRequest containing the token for the user to be logged out.\n:param db: Database session.\n:return: A success message upon successful logout.","operationId":"logout_users_logout_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LogoutRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/register":{"post":{"tags":["Users"],"summary":"Register","description":"Handle user registration. Checks if the user already exists, validates input, \nand then creates a new user in the database.\n\n:param request: RegistrationRequest containing the user's registration details.\n:param db: Database session.\n:return: A success message upon successful registration.","operationId":"register_users_register_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegistrationRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/user-details":{"get":{"tags":["Users"],"summary":"Get User Details","description":"Fetch user details using an authentication token.\n\nThe endpoint checks whether the provided token matches an active user session \nand returns the corresponding user details.\n\n:param token: The authentication token of the user.\n:param db: Database session.\n:return: User details including ID, full name, email, phone number, and login status.","operationId":"get_user_details_users_user_details_get","parameters":[{"name":"token","in":"query","required":true,"schema":{"type":"string","title":"Token"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDetailsResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/ask-for-password-reset":{"post":{"tags":["Users"],"summary":"Request Password Reset","description":"Initiate a password reset for a user by sending a reset token to their email.\n\n:param request: PasswordResetRequest containing the user's email.\n:param db: Database session.\n:return: A success message with the reset token.","operationId":"request_password_reset_users_ask_for_password_reset_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/PasswordResetRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/confirm-reset-password":{"post":{"tags":["Users"],"summary":"Confirm Reset Password","description":"Confirm password reset with a new password.\n\nThis endpoint validates the provided reset token and checks if it is valid, \nthen updates the user's password if it meets the required criteria.\n\n:param request: ResetPasswordRequest containing the reset token and new password details.\n:param db: Database session.\n:return: A success message upon successful password reset.","operationId":"confirm_reset_password_users_confirm_reset_password_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetPasswordRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/users/change-password-authenticated":{"post":{"tags":["Users"],"summary":"Change Password Authenticated","description":"Allow authenticated users to change their password by providing the username and current password.\n\nThis endpoint allows users to change their password after verifying their current password and ensuring that the \nnew password meets the necessary requirements.\n\n:param request: ChangePasswordAuthenticatedRequest containing username, current password, and new password details.\n:param db: Database session.\n:return: A success message upon successful password change.","operationId":"change_password_authenticated_users_change_password_authenticated_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ChangePasswordAuthenticatedRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/packages/":{"get":{"tags":["Packages"],"summary":"Get Packages","description":"Fetch all available packages from the database.\n\n:param db: Database session.\n:return: List of all packages.","operationId":"get_packages_packages__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/PackageResponse"},"type":"array","title":"Response Get Packages Packages  Get"}}}}}}},"/customers/":{"post":{"tags":["Customers"],"summary":"Create Customer","description":"Endpoint to create a new customer in the database.","operationId":"create_customer_customers__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/customers/search":{"post":{"tags":["Customers"],"summary":"Search Customers","description":"Endpoint to search customers by a query string sent in the request body.","operationId":"search_customers_customers_search_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/SearchQuery"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerSearchResponse"}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/audit-logs/":{"get":{"tags":["Audit Logs"],"summary":"Get Audit Logs","description":"Fetch all audit logs from the database.\n\n:param db: Database session.\n:return: List of all audit logs.","operationId":"get_audit_logs_audit_logs__get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}},"post":{"tags":["Audit Logs"],"summary":"Create Audit Log","description":"Create a new audit log entry in the database.\n\n:param audit_log: Details of the audit log to create.\n:param db: Database session.\n:return: Details of the created audit log.","operationId":"create_audit_log_audit_logs__post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuditLogCreate"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/audit-logs/{log_id}":{"get":{"tags":["Audit Logs"],"summary":"Get Audit Log","description":"Fetch a specific audit log by its ID.\n\n:param log_id: The ID of the audit log to fetch.\n:param db: Database session.\n:return: Audit log details.","operationId":"get_audit_log_audit_logs__log_id__get","parameters":[{"name":"log_id","in":"path","required":true,"schema":{"type":"integer","title":"Log Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/audit-logs/user/{user_id}":{"get":{"tags":["Audit Logs"],"summary":"Get Audit Logs By User","description":"Fetch all audit logs for a specific user.\n\n:param user_id: The ID of the user.\n:param db: Database session.\n:return: List of audit logs for the user.","operationId":"get_audit_logs_by_user_audit_logs_user__user_id__get","parameters":[{"name":"user_id","in":"path","required":true,"schema":{"type":"string","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/audit-logs/actions":{"get":{"tags":["Audit Logs"],"summary":"Get Possible Actions","description":"Fetch all possible actions for audit logging.\n\n:return: List of predefined actions that can be logged.","operationId":"get_possible_actions_audit_logs_actions_get","responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}}}}},"/":{"get":{"tags":["Landing Pages"],"summary":"Landing Page","description":"Render the landing page with Bootstrap (Dark Theme).\nProvides quick access to OpenAPI documentation, audit logs, and email testing.","operationId":"landing_page__get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/test-email":{"get":{"tags":["Landing Pages"],"summary":"Test Email Page","description":"Render a page to test email sending functionality.\nAllows users to send a test email to check if email functionality works.","operationId":"test_email_page_test_email_get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/send-test-email":{"post":{"tags":["Landing Pages"],"summary":"Send Test Email","description":"Handle sending a test email to the provided email address.\nProtects against XSS by sanitizing the email input.\n:param email: Email address to send the test email to.","operationId":"send_test_email_send_test_email_post","requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"$ref":"#/components/schemas/Body_send_test_email_send_test_email_post"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/audit-logs-view":{"get":{"tags":["Landing Pages"],"summary":"Audit Logs View","description":"Render a page to view and filter Audit Logs.\nIncludes an input field to filter logs by user ID and a table to display the logs.","operationId":"audit_logs_view_audit_logs_view_get","responses":{"200":{"description":"Successful Response","content":{"text/html":{"schema":{"type":"string"}}}}}}},"/audit-logs":{"get":{"tags":["Landing Pages"],"summary":"Get Audit Logs","description":"Fetch Audit Logs, optionally filtered by User ID.\n:param user_id: Optional User ID to filter logs.\n:param db: Database session.\n:return: List of audit logs.","operationId":"get_audit_logs_audit_logs_get","parameters":[{"name":"user_id","in":"query","required":false,"schema":{"type":"string","title":"User Id"}}],"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}},"/contact-us-send":{"post":{"tags":["Contact Us"],"summary":"Contact Us","description":"Handles 'Contact Us' form submissions, validates user, saves data, and sends email notifications.\n\n:param request: ContactUsRequest model with form details.\n:param db: Database session.\n:return: A success message if the email is sent successfully.","operationId":"contact_us_contact_us_send_post","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ContactUsRequest"}}},"required":true},"responses":{"200":{"description":"Successful Response","content":{"application/json":{"schema":{}}}},"422":{"description":"Validation Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPValidationError"}}}}}}}},"components":{"schemas":{"AuditLogCreate":{"properties":{"user_id":{"type":"string","title":"User Id"},"action":{"type":"string","title":"Action"}},"type":"object","required":["user_id","action"],"title":"AuditLogCreate","description":"Pydantic model for validating the structure of audit log creation requests.\n\nAttributes:\n    user_id: ID of the user performing the action.\n    action: Description of the action performed by the user."},"Body_send_test_email_send_test_email_post":{"properties":{"email":{"type":"string","title":"Email"}},"type":"object","required":["email"],"title":"Body_send_test_email_send_test_email_post"},"ChangePasswordAuthenticatedRequest":{"properties":{"username":{"type":"string","title":"Username"},"current_password":{"type":"string","title":"Current Password"},"new_password":{"type":"string","title":"New Password"},"confirm_password":{"type":"string","title":"Confirm Password"}},"type":"object","required":["username","current_password","new_password","confirm_password"],"title":"ChangePasswordAuthenticatedRequest","description":"Model for changing password while authenticated."},"ContactUsRequest":{"properties":{"user_id":{"type":"string","title":"User Id"},"name":{"type":"string","title":"Name"},"email":{"type":"string","format":"email","title":"Email"},"message":{"type":"string","title":"Message"},"send_copy":{"type":"boolean","title":"Send Copy","default":false}},"type":"object","required":["user_id","name","email","message"],"title":"ContactUsRequest","description":"Pydantic model to validate and structure incoming 'Contact Us' form submissions.\n\nAttributes:\n    user_id: ID of the user submitting the form.\n    name: Name of the person submitting the form.\n    email: Email address of the submitter.\n    message: Message content.\n    send_copy: Flag to send a copy of the submission to the user (default: False)."},"CustomerCreate":{"properties":{"user_id":{"type":"string","title":"User Id"},"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"phone_number":{"type":"string","title":"Phone Number"},"email_address":{"type":"string","format":"email","title":"Email Address"},"address":{"type":"string","title":"Address"},"package_id":{"type":"string","title":"Package Id"},"gender":{"type":"string","title":"Gender"}},"type":"object","required":["user_id","first_name","last_name","phone_number","email_address","address","package_id","gender"],"title":"CustomerCreate","description":"Model to create a new customer with necessary details.\nIt validates the input customer data when a new customer is created."},"CustomerResponse":{"properties":{"id":{"type":"string","title":"Id"},"first_name":{"type":"string","title":"First Name"},"last_name":{"type":"string","title":"Last Name"},"phone_number":{"type":"string","title":"Phone Number"},"email_address":{"type":"string","title":"Email Address"},"address":{"anyOf":[{"type":"string"},{"type":"null"}],"title":"Address"},"package_id":{"type":"string","title":"Package Id"},"gender":{"type":"string","title":"Gender"}},"type":"object","required":["id","first_name","last_name","phone_number","email_address","address","package_id","gender"],"title":"CustomerResponse","description":"Model to structure the customer data when sending the response back."},"CustomerSearchResponse":{"properties":{"status":{"type":"string","title":"Status"},"message":{"type":"string","title":"Message"},"customers":{"items":{"$ref":"#/components/schemas/CustomerResponse"},"type":"array","title":"Customers"}},"type":"object","required":["status","message","customers"],"title":"CustomerSearchResponse","description":"Model to return search results for customers."},"HTTPValidationError":{"properties":{"detail":{"items":{"$ref":"#/components/schemas/ValidationError"},"type":"array","title":"Detail"}},"type":"object","title":"HTTPValidationError"},"LoginRequest":{"properties":{"username_or_email":{"type":"string","title":"Username Or Email"},"password":{"type":"string","title":"Password"},"remember_me":{"type":"boolean","title":"Remember Me","default":false}},"type":"object","required":["username_or_email","password"],"title":"LoginRequest","description":"Model for login request data."},"LoginResponse":{"properties":{"id":{"type":"string","title":"Id"},"token":{"type":"string","title":"Token"},"status":{"type":"string","title":"Status"}},"type":"object","required":["id","token","status"],"title":"LoginResponse","description":"Response model for a successful login."},"LogoutRequest":{"properties":{"token":{"type":"string","title":"Token"}},"type":"object","required":["token"],"title":"LogoutRequest","description":"Model for user logout request."},"PackageResponse":{"properties":{"id":{"type":"string","title":"Id"},"package_name":{"type":"string","title":"Package Name"},"description":{"type":"string","title":"Description"},"monthly_price":{"type":"number","title":"Monthly Price"}},"type":"object","required":["id","package_name","description","monthly_price"],"title":"PackageResponse","description":"Response model for returning package details."},"PasswordResetRequest":{"properties":{"email":{"type":"string","title":"Email"}},"type":"object","required":["email"],"title":"PasswordResetRequest","description":"Model for initiating a password reset."},"RegistrationRequest":{"properties":{"full_name":{"type":"string","title":"Full Name"},"username":{"type":"string","title":"Username"},"email":{"type":"string","format":"email","title":"Email"},"phone_number":{"type":"string","title":"Phone Number"},"password":{"type":"string","title":"Password"},"confirm_password":{"type":"string","title":"Confirm Password"},"accept_terms":{"type":"boolean","title":"Accept Terms"},"gender":{"type":"string","title":"Gender"}},"type":"object","required":["full_name","username","email","phone_number","password","confirm_password","accept_terms","gender"],"title":"RegistrationRequest","description":"Model for user registration request data."},"ResetPasswordRequest":{"properties":{"reset_token":{"type":"string","title":"Reset Token"},"new_password":{"type":"string","title":"New Password"},"confirm_password":{"type":"string","title":"Confirm Password"}},"type":"object","required":["reset_token","new_password","confirm_password"],"title":"ResetPasswordRequest","description":"Model for changing password after token verification."},"SearchQuery":{"properties":{"query":{"type":"string","title":"Query"}},"type":"object","required":["query"],"title":"SearchQuery","description":"Model to structure the search query for customer data."},"UserDetailsResponse":{"properties":{"id":{"type":"string","title":"Id"},"full_name":{"type":"string","title":"Full Name"},"username":{"type":"string","title":"Username"},"email":{"type":"string","title":"Email"},"phone_number":{"type":"string","title":"Phone Number"},"last_login":{"type":"string","title":"Last Login"},"is_logged_in":{"type":"boolean","title":"Is Logged In"},"is_active":{"type":"boolean","title":"Is Active"},"gender":{"type":"string","title":"Gender"}},"type":"object","required":["id","full_name","username","email","phone_number","last_login","is_logged_in","is_active","gender"],"title":"UserDetailsResponse","description":"Response model for user details."},"ValidationError":{"properties":{"loc":{"items":{"anyOf":[{"type":"string"},{"type":"integer"}]},"type":"array","title":"Location"},"msg":{"type":"string","title":"Message"},"type":{"type":"string","title":"Error Type"}},"type":"object","required":["loc","msg","type"],"title":"ValidationError"}}}}